name: Test Modules

on:
  pull_request: []

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        module: ["lmod", "tcl"]
        container_tech: ["podman", "singularity", "docker"]
    steps:

      - name: Install Dependencies
        run: |
          sudo apt-get install lua5.2 liblua5.2-dev lua-filesystem lua-posix tcl tcl-dev tcsh

      - name: Install Environment Modules
        if: ${{ matrix.module == 'tcl' }}
        run: |
         curl -LJO https://github.com/cea-hpc/modules/releases/download/v4.7.1/modules-4.7.1.tar.gz
         tar xfz modules-4.7.1.tar.gz
         ls
         cd modules-4.7.1
         ./configure
         make
         sudo make install

      - name: Install Lmod
        if: ${{ matrix.module == 'lmod' }}
        run: |
          PKG_VERSION=8.4.27
          PKG_URL="https://github.com/TACC/Lmod/archive/${PKG_VERSION}.tar.gz"
          wget $PKG_URL
          tar xfz ${PKG_VERSION}.tar.gz
          cd Lmod-${PKG_VERSION}
          ./configure --prefix=/usr/share && make && make install

      - uses: eWaterCycle/setup-singularity@v6
        if: ${{ matrix.container_tech == 'singularity' }}
        name: Install Singularity
        with:
          singularity-version: 3.6.4

      - name: Create conda environment
        run: conda create --quiet -c conda-forge --name shpc spython

      - uses: actions/checkout@v2
      - name: Install shpc
        run: |
          export PATH="/usr/share/miniconda/bin:$PATH"
          source activate shpc
          pip install -e .

      - name: Run python module tests (bash)
        shell: bash
        run: |
          case "${{ matrix.module }}" in
            lmod)
              . /usr/share/lmod/lmod/init/bash
              ;;
            tcl)
              . /usr/local/Modules/init/bash
              shopt expand_aliases || true
              shopt -s expand_aliases
              ;;
          esac

          export PATH="/usr/share/miniconda/bin:$PATH"
          source activate shpc
          shpc config set container_tech:${{ matrix.container_tech }}
          shpc config set module_sys:${{ matrix.module }}
          shpc config set enable_tty:false

          printf "\n\shpc test ============================================\n"
          shpc test python:3.9.5-alpine          

          shpc install python:3.9.5-alpine

          module use ./modules
          module load python/3.9.5-alpine
          alias

          printf "\n\nmodule show ============================================\n"
          module show python/3.9.5-alpine

          printf "\n\nmodule whatis ==========================================\n"
          module whatis python/3.9.5-alpine

          printf "\n\nmodule help ============================================\n"
          module help python/3.9.5-alpine

          python-exec echo donuts >test_output
          cat test_output
          grep --quiet donuts test_output

          python-run python --version >test_output
          cat test_output
          grep --quiet 'Python 3.9.5' test_output
          rm test_output
          shpc uninstall --force python:3.9.5-alpine 

        
      - name: Run python module tests (tcsh)
        shell: tcsh -e {0}
        run: |
          switch ("${{ matrix.module }}")
            case lmod:
              source /usr/share/lmod/lmod/init/tcsh
              breaksw
            case tcl:
              source /usr/local/Modules/init/tcsh
              breaksw
          endsw

          source /usr/share/miniconda/etc/profile.d/conda.csh
          conda activate shpc
          shpc config set container_tech:${{ matrix.container_tech }}
          shpc config set module_sys:${{ matrix.module }}
          shpc config set enable_tty:false

          shpc install python:3.9.5-alpine

          module use ./modules
          module load python/3.9.5-alpine
          alias

          printf "\n\nmodule show ============================================\n"
          module show python/3.9.5-alpine

          printf "\n\nmodule whatis ==========================================\n"
          module whatis python/3.9.5-alpine

          printf "\n\nmodule help ============================================\n"
          module help python/3.9.5-alpine

          python-exec echo donuts >test_output
          cat test_output
          grep --quiet donuts test_output

          python-run python --version >test_output
          cat test_output
          grep --quiet 'Python 3.9.5' test_output
          rm test_output
          shpc uninstall --force python:3.9.5-alpine
