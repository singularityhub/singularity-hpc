name: Test Registry Module

on:
  pull_request:
    types: [labeled]

jobs:
  test-registry:
    if: ${{ github.event.label.name == 'container-recipe' }}
    runs-on: ubuntu-latest
    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get install lua5.2 liblua5.2-dev lua-filesystem lua-posix tcl tcl-dev

      - name: Install LMOD
        run: |
          PKG_VERSION=8.4.27
          PKG_URL="https://github.com/TACC/Lmod/archive/${PKG_VERSION}.tar.gz"
          wget $PKG_URL
          tar xfz ${PKG_VERSION}.tar.gz
          cd Lmod-${PKG_VERSION}
          ./configure --prefix=/usr/share && make && make install

      - uses: eWaterCycle/setup-singularity@v6
        name: Install Singularity
        with:
          singularity-version: 3.6.4

      - name: Derive number of commits
        run: |
            cd /opt
            branch="${{ github.head_ref }}"
            git config --global user.email "github-actions"
            git config --global user.name "github-actions@noreply.github.users.com"
            git clone -b main https://github.com/singularityhub/singularity-hpc
            cd singularity-hpc
            git checkout -b $branch
            git pull origin $branch
            commits=$(git log --oneline "$branch" ^main | wc -l)
            echo "Found $commits since main"
            cd registry
            touch changes.txt
            # Note that you can also do: git diff --name-only $branch..main .
            # We show the count of commits as a sanity check to the developer
            for container_yaml in $(git diff --name-only HEAD~$commits..HEAD .); do
                echo $container_yaml >> changes.txt
            done            
            cat changes.txt

      - name: Save changelist
        uses: actions/upload-artifact@v2
        with:
          name: changes.txt
          path: /opt/singularity-hpc/registry/changes.txt

      - name: Create conda environment
        run: conda create --quiet -c conda-forge --name shpc spython

      - uses: actions/checkout@v2
      - name: Install shpc
        run: |
          export PATH="/usr/share/miniconda/bin:$PATH"
          source activate shpc
          pip install -e .

      - name: Download changelist
        uses: actions/download-artifact@v2
        with:
          name: changes.txt

      - name: Run module tests
        run: |
          export PATH="/usr/share/miniconda/bin:$PATH"

          source activate shpc
          cd registry
          for container_yaml in $(cat ../changes.txt); do
              module=$(dirname $container_yaml)
              module=$(echo "${module/registry\//}")
              echo "Testing $module"
              shpc test --template ../shpc/tests/test-registry-module.sh --commands $module
          done
